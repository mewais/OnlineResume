diff --git a/bfs.cc b/bfs.cc
index 499c9db..c2d6e80 100644
--- a/bfs.cc
+++ b/bfs.cc
@@ -91,11 +91,10 @@ void* do_work(void* args)
    {
       for(v=start;v<stop;v++)
       {
-         if(exist[v]==0)
-            continue;                              //if not in graph
-         //printf("\nv:%d Q:%d %d",v, Q[v], D[v]);
-         if(D[v]==0 || D[v]==2)                    //already colored
+         if(exist[v]==0 || D[v]==0 || D[v]==2)
+         {
             continue;
+         }
          //printf("\nuu:%d Q:%d %d",v, Q[v], P);
          //D[v]=2;
 
@@ -103,13 +102,17 @@ void* do_work(void* args)
          {
             int neighbor = W_index[v][i];
             //printf("\n Came in");
+            zsim_update_begin();
             if(Q[neighbor]==1)                       //Uncomment for test and test and set
             {
             pthread_mutex_lock(&locks[neighbor]);
             if(Q[neighbor]==1)                       //if unset then set
                Q[neighbor]=0;                        //Can be set to Parent
+            zsim_update_end();
             temporary[neighbor] = 1;
+            zsim_update_begin();
             pthread_mutex_unlock(&locks[neighbor]);
+            zsim_update_end();
             }
          }
       }
@@ -120,10 +123,17 @@ void* do_work(void* args)
       //Update colors
       for(v=start;v<stop;v++)
       {
+         zsim_update_begin();
          if(D[v]==1)
+         {
            D[v] = 2;
+           zsim_update_end();
+         }
          else
+         {
+           zsim_update_end();
            D[v] = temporary[v];
+         }
       }
 
       //Termination Condition
